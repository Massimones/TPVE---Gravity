clear all
close all

%%% The script computes gravity changes induced by a TPE inclusion 
%%% with a given potency and geometry computed by "Call_disk.m"
%%% Input parameters are in S.I.
%%% The script loads "CaseTEST.mat" generated by "Call_disk.m"
%%% Massimo Nespoli March 2025

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Risoluzione=101;             % Horizontal resolution of the grid
RisoluzioneV=200;            % Vertical resolution of the grid
fi=0.19;                     % Porosity
rhos=2650;                   % Density of the solid phase
rhof=985.88;                 % Density of the fluid phase
rhod=rhos*(1-fi)+rhof*fi;    % Density of the poro-elastic medium
p=1e6;                       % Pore pressure change inside the inclusion
T=130;                       % Temperature change inside the inclusion
B=0.62;                      % Skempton parameter
H=10.1e9;                    % Poroelastic parameter
alfa_f=0.0004911;            % Volumetric expansion of the fluid
alfa_s=3e-5;                 % Volumetric expansion of the solid
mu=6e9;                      % Shear modulus
a=2550;                      % disk radius
db=500;                      % disk hight 
MedianPlane=1825;            % TPE inclusion, depth   of median plane  
loadGeometry=0;              % 1 load previous geometry, 0 recompute
loadDGVDGL=0;                % 1 load previous gravity effects, 0 recompute
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

rho=rhod;
rhof2=rhof;
save loadG loadDGVDGL p T rhod rho rhof rhof2 alfa_f B H
G=6.674e-11 ;

if loadGeometry ==0
load CaseTEST

x=reshape(xA,1,[])';
z=reshape(z,1,[])';
u1=reshape(u1A,1,[])';
u3=reshape(u3A,1,[])';
e11=reshape(e11A,1,[])';
e22=reshape(e22A,1,[])';
e33=reshape(e33A,1,[])';
ekk=e11+e22+e33;
tau11=reshape(tau11ve,1,[])';
tau22=reshape(tau22ve,1,[])';
tau33=reshape(tau33ve,1,[])';
taukk=tau11+tau22+tau33;

u1t1=reshape(ux1veA,1,[])';
u3t1=reshape(uz1veA,1,[])';
e11t1=reshape(e111veA,1,[])';
e22t1=reshape(e221veA,1,[])';
e33t1=reshape(e331veA,1,[])';
ekkt1=e11t1+e22t1+e33t1;
tau11t1=reshape(tau111ve,1,[])';
tau22t1=reshape(tau221ve,1,[])';
tau33t1=reshape(tau331ve,1,[])';
taukkt1=tau11t1+tau22t1+tau33t1;

u1t2=reshape(ux2veA,1,[])';
u3t2=reshape(uz2veA,1,[])';
e11t2=reshape(e112veA,1,[])';
e22t2=reshape(e222veA,1,[])';
e33t2=reshape(e332veA,1,[])';
ekkt2=e11t2+e22t2+e33t2;
tau11t2=reshape(tau112ve,1,[])';
tau22t2=reshape(tau222ve,1,[])';
tau33t2=reshape(tau332ve,1,[])';
taukkt2=tau11t2+tau22t2+tau33t2;


%%%%%%%%%%Prepare the geometry
zapp=linspace(min(z),max(z),RisoluzioneV);
stepp=z(2)-z(1);


count=0;
for i=0:360
    
count=count+1;
xp(count,:)=x*sind(i);
yp(count,:)=x*cosd(i);
zp(count,:)=z;

u1p(count,:)=u1*sind(i);
u2p(count,:)=u1*cosd(i);
u3p(count,:)=u3;
ekkp(count,:)=ekk;
taukkp(count,:)=taukk;

u1pt1(count,:)=u1t1*sind(i);
u2pt1(count,:)=u1t1*cosd(i);
u3pt1(count,:)=u3t1;
ekkpt1(count,:)=ekkt1;
taukkpt1(count,:)=taukkt1;

u1pt2(count,:)=u1t2*sind(i);
u2pt2(count,:)=u1t2*cosd(i);
u3pt2(count,:)=u3t2;
ekkpt2(count,:)=ekkt2;
taukkpt2(count,:)=taukkt2;
    
end

disp('check1')
xV=(xp(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
yV=(yp(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
zV=(zp(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
u1V=(u1p(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
u2V=(u2p(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
u3V=(u3p(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
ekkV=(ekkp(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
taukkV=(taukkp(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));

disp('check2')
u1Vt1=(u1pt1(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
u2Vt1=(u2pt1(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
u3Vt1=(u3pt1(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
ekkVt1=(ekkpt1(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
taukkVt1=(taukkpt1(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));

disp('check3')
u1Vt2=(u1pt2(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
u2Vt2=(u2pt2(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
u3Vt2=(u3pt2(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
ekkVt2=(ekkpt2(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));
taukkVt2=(taukkpt2(abs(xp)<(max(max(xp))*sqrt(2)/2) &  abs(yp)<(max(max(xp))*sqrt(2)/2)  ));

Inside2=xV-xV;
Inside2(sqrt(xV.^2+yV.^2)<=a & zV<=(MedianPlane+db/2) & zV>=(MedianPlane-db/2))=1;
Outside2=abs(Inside2-1);

%%%volume representation (interpolation) %%%%%%%%%%%%

xlinV=linspace(min(xV),max(xV),RisoluzioneV);
ylinV=linspace(min(yV),max(yV),RisoluzioneV);
zlinV=linspace(min(zV)+stepp/2,max(zV)+stepp/2,RisoluzioneV);
[XV,YV,ZV]=meshgrid(xlinV,ylinV,zlinV);

disp('check4')
TAUKKV =griddata(xV,yV,zV,taukkV,XV,YV,ZV,'nearest');
EKKV =griddata(xV,yV,zV,ekkV,XV,YV,ZV,'nearest');
UXV =griddata(xV,yV,zV,u1V,XV,YV,ZV,'nearest'); 
UYV =griddata(xV,yV,zV,u2V,XV,YV,ZV,'nearest'); 
UZV =griddata(xV,yV,zV,u3V,XV,YV,ZV,'nearest'); 

Inside=griddata(xV,yV,zV,Inside2,XV,YV,ZV,'nearest'); 
Outside=abs(Inside-1);

TAUKKVt1 =griddata(xV,yV,zV,taukkVt1,XV,YV,ZV,'nearest');
EKKVt1 =griddata(xV,yV,zV,ekkVt1,XV,YV,ZV,'nearest');
UXVt1 =griddata(xV,yV,zV,u1Vt1,XV,YV,ZV,'nearest'); 
UYVt1 =griddata(xV,yV,zV,u2Vt1,XV,YV,ZV,'nearest'); 
UZVt1 =griddata(xV,yV,zV,u3Vt1,XV,YV,ZV,'nearest'); 

TAUKKVt2 =griddata(xV,yV,zV,taukkVt2,XV,YV,ZV,'nearest');
EKKVt2 =griddata(xV,yV,zV,ekkVt2,XV,YV,ZV,'nearest');
UXVt2 =griddata(xV,yV,zV,u1Vt2,XV,YV,ZV,'nearest'); 
UYVt2 =griddata(xV,yV,zV,u2Vt2,XV,YV,ZV,'nearest'); 
UZVt2 =griddata(xV,yV,zV,u3Vt2,XV,YV,ZV,'nearest'); 

save Geometry 
else
    load Geometry 
    load loadG
end

xlin3=linspace(min(xV),max(xV),Risoluzione);
zlin3=linspace(min(zV),max(zV),Risoluzione);
ylin3=linspace(min(yV),max(yV),Risoluzione);

[X3,Y3]=meshgrid(xlin3,ylin3);
UZSurf  =griddata(xV(zV==0),yV(zV==0),u3V(zV==0),X3,Y3); 
 UZSurft1  =griddata(xV(zV==0),yV(zV==0),u3Vt1(zV==0),X3,Y3); 
 UZSurft2  =griddata(xV(zV==0),yV(zV==0),u3Vt2(zV==0),X3,Y3); 

stepx=abs(XV(1,1,1))-abs(XV(1,2,1));
stepy=abs(YV(1,1,1))-abs(YV(2,1,1));
stepz=abs(ZV(1,1,2))-abs(ZV(1,1,1));
infvol=stepx*stepy*stepz;

%%%Compute gravity changes %%%%%%%%%%%%

if loadDGVDGL==0

DEM=rhof*(1/(3*H)*(TAUKKV+3*p/B)-fi*(alfa_f-alfa_s)*T);
DEM1=rhof*(1/(3*H)*(TAUKKVt1+3*p/B)-fi*(alfa_f-alfa_s)*T);
DEM2=rhof*(1/(3*H)*(TAUKKVt2+3*p/B)-fi*(alfa_f-alfa_s)*T);

dem=rhof*(1/(3*H)*(taukkV+3*p/B)-fi*(alfa_f-alfa_s)*T).*Inside2;
demp=rhof*(1/(3*H)*(taukkV+3*p/B)).*Inside2;
demT=rhof*(-fi*(alfa_f-alfa_s)*T).*Inside2;
rhodp=(rhos*infvol*(1-fi)+rhof2*fi*infvol+DEM*infvol)./(infvol*(1+EKKV));
rhodpt1=(rhos*infvol*(1-fi)+rhof*fi*infvol+DEM1*infvol)./(infvol*(1+EKKVt1));
rhodpt2=(rhos*infvol*(1-fi)+rhof*fi*infvol+DEM2*infvol)./(infvol*(1+EKKVt2));
count=0;
   
for l=1:length(xlin3)

    disp(xlin3(l))
    for m=1:length(ylin3)
    count=count+1;
    xf(count)=xlin3(l);
    yf(count)=ylin3(m);

    if yf(count)==0
    DGV(count)=0;
        
 
    radius=sqrt((xlin3(l)-XV).^2+(ylin3(m)-YV).^2+ZV.^2);
    theta=asind(sqrt((xlin3(l)-XV).^2+(ylin3(m)-YV).^2)./radius);
    
    radiusa=sqrt((xlin3(l)-(XV+UXV)).^2+(ylin3(m)-(YV+UYV)).^2+(ZV+UZV).^2);
    thetaa=asind(sqrt((xlin3(l)-(XV+UXV)).^2+(ylin3(m)-(YV+UYV)).^2)./radiusa);
   
    radiusat1=sqrt((xlin3(l)-(XV+UXVt1)).^2+(ylin3(m)-(YV+UYVt1)).^2+(ZV+UZVt1).^2);
    thetaat1=asind(sqrt((xlin3(l)-(XV+UXVt1)).^2+(ylin3(m)-(YV+UYVt1)).^2)./radiusat1);
 
    radiusat2=sqrt((xlin3(l)-(XV+UXVt2)).^2+(ylin3(m)-(YV+UYVt2)).^2+(ZV+UZVt2).^2);
    thetaat2=asind(sqrt((xlin3(l)-(XV+UXVt2)).^2+(ylin3(m)-(YV+UYVt2)).^2)./radiusat2);
    
    DGV(count)=sum(-G*rho*EKKV.*infvol.*Outside.*cosd(theta)./(radius.^2),'all');
    DGL(count)=-2*pi*rho*G*UZSurf(l,m);

    DGS(count)=G*sum((rhodp-rho)*infvol.*Inside.*cosd(theta)./(radius.^2)+(rhodp-rho).*(EKKV.*infvol).*Inside.*cosd(thetaat1)./(radiusat1.^2),'all');
    DGFA(count)=0.3086*UZSurf(l,m)/100000;
    DGTOT(count)=DGFA(count)+DGS(count)+DGV(count)+DGL(count);
    DGR(count)=DGS(count)+DGV(count)+DGL(count);
    
    DGVt1(count)=sum(-G*rho*EKKVt1.*infvol.*Outside.*cosd(theta)./(radius.^2),'all');
    DGLt1(count)=-2*pi*rho*G*UZSurft1(l,m);
    DGSt1(count)=G*sum((rhodpt1-rho)*infvol.*Inside.*cosd(theta)./(radius.^2)+(rhodpt1-rho).*(EKKVt1.*infvol).*Inside.*cosd(thetaat1)./(radiusat1.^2),'all');
    DGFAt1(count)=0.3086*UZSurft1(l,m)/100000;
    DGTOTt1(count)=DGFAt1(count)+DGSt1(count)+DGVt1(count)+DGLt1(count);
    DGRt1(count)=DGSt1(count)+DGVt1(count)+DGLt1(count);

    DGVt2(count)=sum(-G*rho*EKKVt2.*infvol.*Outside.*cosd(theta)./(radius.^2),'all');
    DGLt2(count)=-2*pi*rho*G*UZSurft2(l,m);
    DGSt2(count)=G*sum((rhodpt2-rho)*infvol.*Inside.*cosd(theta)./(radius.^2)+(rhodpt2-rho).*(EKKVt2.*infvol).*Inside.*cosd(thetaat2)./(radiusat2.^2),'all');
    DGFAt2(count)=0.3086*UZSurft2(l,m)/100000;
    DGTOTt2(count)=DGFAt2(count)+DGSt2(count)+DGVt2(count)+DGLt2(count);
    DGRt2(count)=DGSt2(count)+DGVt2(count)+DGLt2(count);
 else
    DGV(count)=0;
    DGL(count)=0;
    DGS(count)=0;
    DGFA(count)=0;
    DGTOT(count)=0;
    DGR(count)=DGS(count);

    end
    end
end

save DGvDGL  
 else
     load DGvDGL
 end


%Plot results%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
xlinrt=linspace(min(xV),max(xV),15);
zlinrt=linspace(min(zV),max(zV),10);

[X,Y]=meshgrid(xlinrt,zlinrt);
u1V_interpolata2 =griddata(xV(yV==0),zV(yV==0),u1V(yV==0),X,Y); 
u3V_interpolata2 =griddata(xV(yV==0),zV(yV==0),u3V(yV==0),X,Y); 
u1Vt1_interpolata2 =griddata(xV(yV==0),zV(yV==0),u1Vt1(yV==0),X,Y); 
u3Vt1_interpolata2 =griddata(xV(yV==0),zV(yV==0),u3Vt1(yV==0),X,Y); 
u1Vt2_interpolata2 =griddata(xV(yV==0),zV(yV==0),u1Vt2(yV==0),X,Y); 
u3Vt2_interpolata2 =griddata(xV(yV==0),zV(yV==0),u3Vt2(yV==0),X,Y); 


figure(1);
[X,Y]=meshgrid(xlin3,zlin3);
VAR_interpolata2 =griddata(xV(yV==0),zV(yV==0),ekkV(yV==0),X,Y); 
L=image(xlin3,zlin3,VAR_interpolata2,'Cdatamapping','scaled');
colorbar
colormap(flipud(autumn))
caxis([0 1]*2.e-4);
axis equal 
xlabel('x (m)');
ylabel('z (m)');
title('e_{kk} - Elastic');
set(gca,'FontSize',12)
set(gca, 'FontName', 'Times')
hold on 
scalefact=500;
quiver(xlinrt,zlinrt,u1V_interpolata2*scalefact,u3V_interpolata2*scalefact,'black','AutoScale','off')
axis([-5000 5000 -1000 4000])

figure(11);
[X,Y]=meshgrid(xlin3,zlin3);
VAR_interpolata2 =griddata(xV(yV==0),zV(yV==0),taukkV(yV==0),X,Y); 
L=image(xlin3,zlin3,VAR_interpolata2,'Cdatamapping','scaled');
colorbar
colormap(jet)
caxis([-10 10]*1.e6);
axis equal 
xlabel('x (m)');
ylabel('z (m)');
title('\sigma_{kk} - Elastic');
set(gca,'FontSize',12)
set(gca, 'FontName', 'Times')
hold on 
quiver(xlinrt,zlinrt,u1V_interpolata2*scalefact,u3V_interpolata2*scalefact,'black','AutoScale','off')
axis([-5000 5000 -1000 4000])

figure(6)
plot(xf(yf==0),DGV(yf==0)*100000000,xf(yf==0),DGL(yf==0)*100000000,xf(yf==0),DGS(yf==0)*100000000,xf(yf==0),DGFA(yf==0)*100000000,xf(yf==0),DGR(yf==0)*100000000);
legend('DG_V','DG_L','DG_d','DG_FA','Dg_ {R}');
hold on
%%%% titoli vari
xlabel('x (m)');
ylabel('Dg (\mu Gal)');
title('Dg');
set(gca,'FontSize',12)
set(gca, 'FontName', 'Times')

figure(66)
plot(xf(yf==0),DGV(yf==0)*100000000/max(abs(u3)),xf(yf==0),DGL(yf==0)*100000000/max(abs(u3)),xf(yf==0),DGS(yf==0)*100000000/max(abs(u3)),xf(yf==0),DGFA(yf==0)*100000000/max(abs(u3)),xf(yf==0),DGR(yf==0)*100000000/max(abs(u3)));
legend('DG_V/m','DG_L/m','DG_d/m','DG_{FA}/m','Dg_{R}/m');
hold on
xlabel('x (m)');
ylabel('Dg (\mu Gal)/m');
title('Dg/m');
set(gca,'FontSize',12)
set(gca, 'FontName', 'Times')

figure(7);
[X,Y]=meshgrid(xlin3,zlin3);
VAR_interpolata2 =griddata(xV(yV==0),zV(yV==0),ekkVt1(yV==0),X,Y); 
L=image(xlin3,zlin3,VAR_interpolata2,'Cdatamapping','scaled');
colorbar
colormap(flipud(autumn))
caxis([0 1]*2.e-4);
axis equal 
xlabel('x (m)');
ylabel('z (m)');
title('e_{kk} (\tau = 2)');
set(gca,'FontSize',12)
set(gca, 'FontName', 'Times')
hold on 
quiver(xlinrt,zlinrt,u1Vt1_interpolata2*scalefact,u3Vt1_interpolata2*scalefact,'black','AutoScale','off')
axis([-5000 5000 -1000 4000])

figure(77);
[X,Y]=meshgrid(xlin3,zlin3);
VAR_interpolata2 =griddata(xV(yV==0),zV(yV==0),taukkVt1(yV==0),X,Y); 
L=image(xlin3,zlin3,VAR_interpolata2,'Cdatamapping','scaled');
colorbar
colormap(jet)
caxis([-10 10]*1.e6);
axis equal 
xlabel('x (m)');
ylabel('z (m)');
title('\sigma_{kk} (\tau = 2)');
set(gca,'FontSize',12)
set(gca, 'FontName', 'Times')
hold on 
quiver(xlinrt,zlinrt,u1Vt1_interpolata2*scalefact,u3Vt1_interpolata2*scalefact,'black','AutoScale','off')
axis([-5000 5000 -1000 4000])

figure(9);
[X,Y]=meshgrid(xlin3,zlin3);
VAR_interpolata2 =griddata(xV(yV==0),zV(yV==0),ekkVt2(yV==0),X,Y); 
L=image(xlin3,zlin3,VAR_interpolata2,'Cdatamapping','scaled');
colorbar
colormap(flipud(autumn))
caxis([0 1]*2.e-4);
axis equal 
xlabel('x (m)');
ylabel('z (m)');
title('e_{kk} (\tau = 0.5)');
set(gca,'FontSize',12)
set(gca, 'FontName', 'Times')
hold on 
quiver([xlinrt ],[zlinrt ],[u1Vt2_interpolata2*scalefact ],[u3Vt2_interpolata2*scalefact],'black','AutoScale','off')
quiver(4000,500,1*scalefact,0,'black','AutoScale','off')
axis([-5000 5000 -1000 4000])

figure(99);
[X,Y]=meshgrid(xlin3,zlin3);
VAR_interpolata2 =griddata(xV(yV==0),zV(yV==0),taukkVt2(yV==0),X,Y); 
L=image(xlin3,zlin3,VAR_interpolata2,'Cdatamapping','scaled');
colorbar
colormap(jet)
caxis([-10 10]*1.e6);
axis equal 
xlabel('x (m)');
ylabel('z (m)');
title('\sigma_{kk} (\tau = 0.5)');
set(gca,'FontSize',12)
set(gca, 'FontName', 'Times')
hold on 
quiver(xlinrt,zlinrt,u1Vt2_interpolata2*scalefact,u3Vt2_interpolata2*scalefact,'black','AutoScale','off')
axis([-5000 5000 -1000 4000])

figure(10)
plot(xf(yf==0),DGV(yf==0)*100000000,xf(yf==0),DGL(yf==0)*100000000,xf(yf==0),DGS(yf==0)*100000000,xf(yf==0),DGFA(yf==0)*100000000,xf(yf==0),DGR(yf==0)*100000000);
hold on
plot(xf(yf==0),DGVt2(yf==0)*100000000,'--',xf(yf==0),DGLt2(yf==0)*100000000,'--',xf(yf==0),DGSt2(yf==0)*100000000,'--',xf(yf==0),DGFAt2(yf==0)*100000000,'--',xf(yf==0),DGRt2(yf==0)*100000000,'--');
plot(xf(yf==0),DGVt1(yf==0)*100000000,':',xf(yf==0),DGLt1(yf==0)*100000000,':',xf(yf==0),DGSt1(yf==0)*100000000,':',xf(yf==0),DGFAt1(yf==0)*100000000,':',xf(yf==0),DGRt1(yf==0)*100000000,':');
legend('\Delta g_V','\Delta g_L','\Delta g_d','\Delta g_FA','\Deltag_ {R}','\Delta g_V (\tau = 0.5)','\Delta g_L (\tau = 0.5)','\Delta g_d (\tau = 0.5)','\Delta g_FA (\tau = 0.5)','\Deltag_ {R} (\tau = 0.5)','\Delta g_V (\tau = 2)','\Delta g_L (\tau = 2)','\Delta g_d (\tau = 2)','\Delta g_FA (\tau = 2)','\Deltag_ {R} (\tau = 2)');
xlabel('x (m)');
ylabel('\Delta g  (\mu Gal)');
grid on
title('\Delta g (\tau = 0.5)');
set(gca,'FontSize',12)
set(gca, 'FontName', 'Times')
